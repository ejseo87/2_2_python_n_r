# Chapter 6


# Pyhon 1.1

import numpy as np

import pandas as pd

from pandas import Series, DataFrame

s = Series([10,20,30], index=['a','b','c'])

s = pd.Series([10,20,30], index=['a','b','c'])

df = pd.DataFrame(s, columns=["A"])

dir(df)

s.__class__

df.__class__

# Python 1.2


s.to_numpy()

df.to_numpy()

s.to_numpy().shape


df.to_numpy().shape


s.index

df.index

df.columns

# 1.3

d = { 'one' : Series([1,2], index=['a','b'])
      'two' : Series([1,2,3], index=['a','b','c']) }

df = pd.DataFrame(d) 

df

x = np.arange(4).reshape((2,2))

x

df = df = pd.DataFrame(x)

df.columns=['A','B']

df.index = [11,12]

df

# 1.4

faithful = pd.read_csv("e:/data/pyandr/faithful.csv")

faithful.shape

faithful.head()

faithful.head(3)


faithful.__class__

type(faithful)


faithful.to_csv("e:/data/pyandr/old_faithful.csv")

# 1.5

import statsmodels.api as sm

trees = sm.datasets.get_rdataset("trees")['data']

mtcars = sm.datasets.get_rdataset("mtcars")['data']

iris = sm.datasets.get_rdataset("iris")['data']

type(trees)

trees.__class__


# 1.6

s1 = pd.Series([1.0, 2, 3])

sa = pd.Series([1.0, 2, 3], index=['a','b','c'])

sc = pd.Series([0.0, 1, 2], index=['a','b','d'])

sn = pd.Series([1,2,1,3,3,5,3,4])

sac = sa+sc

# 1.7

sac.isnull()

sac.notnull()

sac.fillna(-1.0)

sac.dropna()

sy = sx.append(sc[:2])

sy.drop('a')

# 1.8

sn

sn.head()

sn.describe()

list(sn.unique())

sn.nunique()

sn.replace([1,2], 0)

# 1.9


import statsmodels.api as sm

trees = sm.datasets.get_rdataset("trees")['data']

trees.shape

tree4 = trees[0:4].copy()

tree4


tree4.index = ['B','C', 'D', 'E']

tree4

tree4[tree4>10]

tree4[tree4.Height > 65]

tree4['E':'C']

cols = ['Girth', 'Height']
tree4[cols]

# 1.10

tree4.iloc[[0,2], [0,1]]

tree4.iloc[:2, [0,1]]

tree4.iloc[:2, 0:1]

tree4.loc['E':'C']

tree4.loc[['E','C'],['Girth','Height']]

tree4.loc['E':'C','Girth':'Height']

# 1.11

tree4.T

tree4.sort_index()

tree4.sort_values('Height')

# 1.12

tree4.mean()

tree4.mean(1)

tree4.cumsum()

tree4.apply(np.cumsum)

tree4.apply(lambda x: x.max())

# 1.13


import statsmodels.api as sm

mtcars = sm.datasets.get_rdataset("mtcars")['data']

mtcars.head()

cols = ['mpg', 'cyl', 'hp', 'gear']

mtx = mtcars[cols].copy()

mtx.head()

pd.crosstab(mtx.cyl, mtx.gear)

mtn = mtx.groupby(by=['cyl','gear']).mean()

mtn


